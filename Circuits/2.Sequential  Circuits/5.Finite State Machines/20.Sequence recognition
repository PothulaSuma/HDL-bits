module top_module(
    input clk,
    input reset,    // Synchronous reset
    input in,
    output disc,
    output flag,
    output err);
    
    parameter NONE=0,ONE=1,TWO=2,THREE=3,FOUR=4,FIVE=5,SIX=6,ERROR=7,DISCARD=8,FLAG=9;
    reg [3:0] state,next;
    
    always@(posedge clk)
        begin
            if(reset)
                state<=NONE;
            else
                state<=next;
        end
    always@(*)
        begin
            case(state)
                NONE : next = (in) ? ONE   : NONE;
				ONE	 : next = (in) ? TWO   : NONE;
				TWO	 : next = (in) ? THREE : NONE;
				THREE: next = (in) ? FOUR  : NONE;
				FOUR : next = (in) ? FIVE  : NONE;
                FIVE : next = (in) ? SIX   : DISCARD;
                SIX	 : next = (in) ? ERROR : FLAG;
				DISCARD : next = (in) ? ONE   : NONE;
				FLAG : next = (in) ? ONE   : NONE;
                ERROR  : next = (in) ? ERROR: NONE;
            endcase
        end
        assign disc=(state==DISCARD);
    		assign flag=( state==FLAG);
        assign err=( state==ERROR);

endmodule
