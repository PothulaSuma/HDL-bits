module top_module (
    input clk,
    input shift_ena,
    input count_ena,
    input data,
    output reg [3:0] q);
    
    always@(posedge clk)
        begin
            case({shift_ena,count_ena})
                2'b10:begin
                    q[0]<=data;
                    q[1]<=q[0];
                    q[2]<=q[1];
                    q[3]<=q[2];
                end
                2'b01:q<=q-1;
            endcase
                end
endmodule
