module top_module (
	input clk,
	input [7:0] d,
	input [1:0] sel,
	output reg [7:0] q
);

	wire [7:0] a, b, c;		// output of each my_dff8
	
	// Instantiate three my_dff8s
 //module my_dff8 ( input clk, input [7:0] d, output [7:0] q );
	my_dff8 d1 ( clk, d, a );
	my_dff8 d2 ( clk, o1, b );
	my_dff8 d3 ( clk, o2, c );

	// This is one way to make a 4-to-1 multiplexer
	always @(*)		// Combinational always block
		case(sel)
			2'h0: q = d;
			2'h1: q = a;
			2'h2: q = b;
			2'h3: q = c;
		endcase

endmodule
